<?xml version="1.0"?>
<project name="GISCDM-DOCUMENTS" basedir="." default="compile">
	<!-- Build Properties -->
	<property file="build.properties" />
	
	<!-- Default location of the DocBook XSL library -->
	<property name="docbook.home" value="${env.DOCBOOK_HOME}" />

	<!-- Default location of Apache FOP  -->
	<property name="fop.home" value="${env.FOP_HOME}" />
	
	<!-- FOP/Xalan Classpath -->
	<path id="fop.classpath">
		<fileset dir="${fop.home}/lib">
			<include name="*.jar" />
		</fileset>

		<fileset dir="${fop.home}/build">
			<include name="*.jar" />
		</fileset>
	</path>
	
	<!-- FOP Ant Task -->
	<taskdef name="fop" classname="org.apache.fop.tools.anttasks.Fop">
		<classpath refid="fop.classpath" />
	</taskdef>

	<!-- Creates directories for DocBook output -->
	<target name="prepare" depends="license" description="Creates directories for DocBook output">
		<echo message="Creating html directory" />
		<mkdir dir="html" />
	</target>

	<target name="license" description="Creates License.xml">
		<echo message="Creating License.xml" />
		<exec executable="./make-license"/>
	</target>
	
	<!-- Copy over static content into output area for HTML output -->
	<target name="prepare-html" depends="prepare" description="Prepare for HTML output">
		<copy todir="html/images">
		    <fileset dir="images">
				<exclude name="**/.svn" />
				<exclude name="**/*.sdr" />
			</fileset>
		</copy>
		
		<copy todir="html/css">
			<fileset dir="css" excludes="**/.svn"/>
		</copy>
	</target>
	
	<!-- Prepare for PDF output -->
	<target name="prepare-pdf" depends="prepare" description="Prepare for PDF output">
		<mkdir dir="pdf" />
	</target>

	<!-- Remove files and directories created during the build process -->
	<target name="clean" description="Remove files and directories created during the build process">
		<echo message="Removing build files" />
		<delete dir="html" />
		<delete dir="pdf" />
		<delete dir="tmp" />
		<delete file="xsl/custom-titlepage.xsl" />
	</target>
	

	<!-- Transform DocBook into single html file -->
<!--
	<target name="compile-html-single" depends="prepare-html" description="Transform DocBook into single html file">
		<echo message="Transforming DocBook into HTML (single)" />
		<xslt classpathref="fop.classpath"
			  basedir="src"
		      destdir="build/html-single"
			  includes="**/*.xml"
		      style="xsl/custom-html.xsl" />
	</target>
-->
	
	<!-- Transform DocBook into multiple html files (chunked) -->
	<target name="compile-html-chunk" depends="prepare-html" description="Transform DocBook into multiple html files (chunked)">
		<echo message="Transforming DocBook into HTML (chunk)" />
		<xslt classpathref="fop.classpath"
			  basedir="src"
			  destdir="tmp"
			  includes="multigraph.xml"
			  style="xsl/custom-chunk.xsl">
			<param name="base.dir" expression="${basedir}/html/" /> <!-- This parameter must be passed to XSL to set proper output directory -->
		</xslt>
	</target>
			

	<!-- Compile DocBook title page customizations from title page spec file (for FO output)
	      
	     This creates a title page attributes stylesheet that is used to format the title page for XML-FO and PDF output
	-->
	<target name="compile-titlepage" description="Compile DocBook title page customizations from title page spec file (for FO output)">
		<echo message="Creating DocBook title page customizations" />
		<xslt classpathref="fop.classpath"
		      in="xsl/titlepage.spec.xml"
		      out="xsl/custom-titlepage.xsl"
		      style="${docbook.home}/template/titlepage.xsl" />
	</target>
			
    <!-- Transform DocBook into XML-FO.  This is the intermediate format needed to convert DocBook to PDF -->
	<target name="compile-fo" depends="prepare, compile-titlepage" description="Transform DocBook into XML-FO (intermediate to PDF)">
		<echo message="Transforming DocBook into XML-FO" />
		<xslt classpathref="fop.classpath"
		      basedir="src"
			  destdir="tmp"
			  includes="multigraph.xml"
			  extension=".fo"
		      style="xsl/custom-fo.xsl" />
	</target>
	
	<!-- Transform XML-FO from compile-fo into PDF.  This takes the XML-FO generated by compile-fo and converts it into PDF.  -->
	<target name="compile-pdf" depends="compile-fo, prepare-pdf" description="Transform XML-FO from compile-fo into PDF">
		<echo message="Compiling XML-FO into PDF" />
		<fop format="application/pdf" basedir="tmp" outdir="pdf">
			<fileset dir="tmp">
				<include name="*.fo" />
			</fileset>
		</fop>

	</target>

	<!-- Compile all output formats -->
	<target name="compile" description="Compile all output formats">
		<echo message="Compiling All" />
		<antcall target="compile-html-chunk" />
<!--
		<antcall target="compile-html-single" />
		<antcall target="compile-pdf" />
-->


	</target>

	<target name="pdf" description="Generate PDF" depends="compile-pdf"/>
	
</project>
